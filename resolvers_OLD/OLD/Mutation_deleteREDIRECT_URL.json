{
    "resolver": {
        "typeName": "Mutation",
        "fieldName": "deleteREDIRECT_URL",
        "dataSourceName": "hazel_mapping_dev",
        "resolverArn": "arn:aws:appsync:us-east-2:794611117044:apis/rxlu3umb3bdhjgswtlwqbsd44m/types/Mutation/resolvers/deleteREDIRECT_URL",
        "kind": "UNIT",
        "maxBatchSize": 0,
        "runtime": {
            "name": "APPSYNC_JS",
            "runtimeVersion": "1.0.0"
        },
        "code": "import { util } from '@aws-appsync/utils';\nimport { remove, select, createMySQLStatement, toJsonObject } from '@aws-appsync/utils/rds';\n\n/**\n * Deletes an item with REDIRECT_URL_ID `ctx.args.input.REDIRECT_URL_ID` from the REDIRECT_URL table.\n * @param {import('@aws-appsync/utils').Context} ctx the context\n * @returns {*} the request\n */\nexport function request(ctx) {\n    const { input: { REDIRECT_URL_ID }, condition = {} } = ctx.args;\n    const where = {\n        ...condition,\n        REDIRECT_URL_ID: {\n            eq: REDIRECT_URL_ID,\n        },\n    };\n    const selectStatement = select({\n        table: 'REDIRECT_URL',\n        columns: '*',\n        where,\n        limit: 1,\n    });\n    const deleteStatement = remove({\n        table: 'REDIRECT_URL',\n        where,\n    });\n    return createMySQLStatement(selectStatement, deleteStatement)\n}\n\n/**\n * Returns the result or throws an error if the operation failed.\n * @param {import('@aws-appsync/utils').Context} ctx the context\n * @returns {*} the result\n */\nexport function response(ctx) {\n    const { error, result } = ctx;\n    if (error) {\n        return util.appendError(\n            error.message,\n            error.type,\n            result\n        )\n    }\n    return toJsonObject(result)[0][0]\n}\n"
    }
}
