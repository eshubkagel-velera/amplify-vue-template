{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "EmailDomainValidationFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "email-domain-validation-dev",
        "Runtime": "nodejs18.x",
        "Handler": "index.handler",
        "Code": {
          "ZipFile": "exports.handler = async (event) => {\n  const email = event.request.userAttributes.email;\n  \n  // Input validation\n  if (!email || typeof email !== 'string') {\n    throw new Error('Invalid email format');\n  }\n  \n  var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!emailRegex.test(email)) {\n    throw new Error('Invalid email format');\n  }\n  \n  if (!email.endsWith('@velera.com')) {\n    throw new Error('Only @velera.com email addresses are allowed');\n  }\n  \n  console.log('Email validation passed for domain: ' + email.split('@')[1]);\n  return event;\n};\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "PostConfirmationFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "post-confirmation-dev",
        "Runtime": "nodejs18.x",
        "Handler": "index.handler",
        "Code": {
          "ZipFile": "const { CognitoIdentityProviderClient, AdminAddUserToGroupCommand, ListUsersInGroupCommand } = require('@aws-sdk/client-cognito-identity-provider');\nconst { SESClient, SendEmailCommand } = require('@aws-sdk/client-ses');\n\nconst cognito = new CognitoIdentityProviderClient({ region: 'us-east-2' });\nconst ses = new SESClient({ region: 'us-east-2' });\n\nexports.handler = async (event) => {\n  const { userPoolId, userName } = event;\n  const userAttributes = event.request.userAttributes;\n  const region = process.env.AWS_REGION;\n  \n  // Input validation\n  if (!userAttributes.email || !userAttributes.email.includes('@')) {\n    console.error('Invalid email format');\n    return event;\n  }\n  \n  try {\n    // Add user to ReadOnly group by default\n    await cognito.send(new AdminAddUserToGroupCommand({\n      GroupName: 'readonly',\n      UserPoolId: userPoolId,\n      Username: userName\n    }));\n    \n    console.log('User ' + userName + ' added to readonly group');\n    \n    // Send notification to admins about new user\n    const adminUsers = await cognito.send(new ListUsersInGroupCommand({\n      GroupName: 'admin',\n      UserPoolId: userPoolId\n    }));\n    \n    const adminEmails = adminUsers.Users.map(user => \n      user.Attributes.find(attr => attr.Name === 'email')?.Value\n    ).filter(email => email && email.includes('@'));\n    \n    console.log('Admin emails found:', JSON.stringify(adminEmails));\n    \n    if (adminEmails.length > 0) {\n      const emailParams = {\n        Source: 'eshubkagel@velera.com',\n        Destination: { ToAddresses: adminEmails },\n        Message: {\n          Subject: { Data: 'New User Registration: ' + userAttributes.email.split('@')[0] + '@*** (' + (userAttributes.name || 'Unknown') + ')' },\n          Body: {\n            Text: {\n              Data: 'New user has registered and been added to readonly group.\\n\\nUser Details:\\n- Email: ' + userAttributes.email + '\\n- Username: ' + userName + '\\n- ' + (userAttributes.name || 'Requested Access: Unknown') + '\\n\\nTo add user to requested group:\\nhttps://us-east-2.console.aws.amazon.com/cognito/v2/idp/user-pools/' + userPoolId + '/user-management/groups/details/' + (userAttributes.name ? userAttributes.name.replace('Requested: ', '').toLowerCase() : 'developer') + '/add-user?region=' + region\n            }\n          }\n        }\n      };\n      \n      console.log('Sending email TO:', JSON.stringify(adminEmails));\n      const result = await ses.send(new SendEmailCommand(emailParams));\n      console.log('SES Response:', JSON.stringify(result));\n      console.log('Notification sent to ' + adminEmails.length + ' admins');\n    }\n  } catch (error) {\n    console.error('Error in post-confirmation:', error.message);\n    console.error('Full error:', JSON.stringify(error));\n  }\n  \n  return event;\n};\n"
        },
        "Role": {
          "Fn::GetAtt": [
            "PostConfirmationLambdaRole",
            "Arn"
          ]
        }
      }
    },
    "PostConfirmationLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "CognitoGroupManagement",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:AdminAddUserToGroup",
                    "cognito-idp:ListUsersInGroup"
                  ],
                  "Resource": "arn:aws:cognito-idp:us-east-2:794611117044:userpool/us-east-2_iAtP0Uzh5"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:SendEmail"
                  ],
                  "Resource": [
                    "arn:aws:ses:us-east-2:*:identity/eshubkagel@velera.com"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "PostConfirmationLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "PostConfirmationFunction"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": "arn:aws:cognito-idp:us-east-2:794611117044:userpool/us-east-2_iAtP0Uzh5"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "CognitoLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "EmailDomainValidationFunction"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": "arn:aws:cognito-idp:us-east-2:794611117044:userpool/us-east-2_iAtP0Uzh5"
      }
    },
    "AppSyncLoggingRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CloudWatchLogsAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "RDSServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "RDSDataAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "rds-data:*"
                  ],
                  "Resource": [
                    "arn:aws:rds:us-east-2:*:cluster:hazel-mapping"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "secretsmanager:GetSecretValue",
                    "kms:Decrypt",
                    "kms:DescribeKey"
                  ],
                  "Resource": [
                    "arn:aws:secretsmanager:us-east-2:794611117044:secret:rds!cluster-a11d98c5-d647-45a2-9978-f81be7aa3d60-iDsvX3",
                    "arn:aws:kms:us-east-2:*:key/*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    "arn:aws:logs:us-east-2:*:log-group:/aws/appsync/*"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "GraphQlApi": {
      "Type": "AWS::AppSync::GraphQLApi",
      "Properties": {
        "Name": "vue-appsync-api-dev",
        "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
        "AdditionalAuthenticationProviders": [
          {
            "AuthenticationType": "API_KEY"
          }
        ],
        "UserPoolConfig": {
          "AwsRegion": "us-east-2",
          "UserPoolId": "us-east-2_iAtP0Uzh5",
          "DefaultAction": "ALLOW"
        },
        "XrayEnabled": false
      }
    },
    "GraphQlApiKeyDefault": {
      "Type": "AWS::AppSync::ApiKey",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "Description": "Auto-generated api key",
        "Expires": 1790341200
      }
    },
    "GraphQlSchema": {
      "Type": "AWS::AppSync::GraphQLSchema",
      "Properties": {
        "Definition": "schema {\n  query: Query\n  mutation: Mutation\n  subscription: Subscription\n}\n\ntype CONFIG_PARAM {\n  CHANGED_DATE: String\n  CONFIG_NAME: String!\n  CONFIG_PARAM_ID: Int!\n  CONFIG_VALUE: String!\n  CREATED_DATE: String\n  DESCRIPTION: String\n}\n\ntype LOAN_APP {\n  CHANGED_DATE: String\n  CREATED_DATE: String!\n  EXEC_ID: String\n  LOAN_APP_ID: Int!\n  ORIGIN_LOAN_APP_ID: String!\n  ORIGIN_PRODUCT_ID: Int!\n  PROCESS_FLAG: String!\n}\n\ntype NEW_MEMBER_TOKEN {\n  CARD_NBR: String\n  CHANGED_DATE: String\n  CREATED_DATE: String!\n  DOB: String\n  EMAIL_ADDRESS_TEXT: String\n  FIRST_NAME: String\n  HOME_PHONE_NBR: String\n  LAST_NAME: String\n  LOAN_APP_ID: Int!\n  MEMBER_NBR: String\n  MOBILE_PHONE_NBR: String\n  NEW_MEMBER_TOKEN_ID: Int!\n  PERSON_NBR: String\n  TAX_ID: String\n  TOKEN_USED_FLAG: String!\n  TOKEN_VALUE: String\n  ZIP_CODE: String\n}\n\ntype ORIGIN_PRODUCT {\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  ORIGIN_PRODUCT_ID: Int!\n  PARTNER_CODE: String\n  PRODUCT_DESC: String!\n  PRODUCT_ID: String!\n  PSCU_CLIENT_ID: Int!\n  VENDOR_NAME: String!\n}\n\ninput CreateCONFIG_PARAMInput {\n  CHANGED_DATE: String\n  CONFIG_NAME: String!\n  CONFIG_PARAM_ID: Int!\n  CONFIG_VALUE: String!\n  CREATED_DATE: String\n  DESCRIPTION: String\n}\n\ninput CreateLOAN_APPInput {\n  CHANGED_DATE: String\n  CREATED_DATE: String!\n  EXEC_ID: String\n  LOAN_APP_ID: Int!\n  ORIGIN_LOAN_APP_ID: String!\n  ORIGIN_PRODUCT_ID: Int!\n  PROCESS_FLAG: String!\n}\n\ninput CreateNEW_MEMBER_TOKENInput {\n  CARD_NBR: String\n  CHANGED_DATE: String\n  CREATED_DATE: String!\n  DOB: String\n  EMAIL_ADDRESS_TEXT: String\n  FIRST_NAME: String\n  HOME_PHONE_NBR: String\n  LAST_NAME: String\n  LOAN_APP_ID: Int!\n  MEMBER_NBR: String\n  MOBILE_PHONE_NBR: String\n  NEW_MEMBER_TOKEN_ID: Int!\n  PERSON_NBR: String\n  TAX_ID: String\n  TOKEN_USED_FLAG: String!\n  TOKEN_VALUE: String\n  ZIP_CODE: String\n}\n\ninput CreateORIGIN_PRODUCTInput {\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  ORIGIN_PRODUCT_ID: Int\n  PARTNER_CODE: String\n  PRODUCT_DESC: String!\n  PRODUCT_ID: String!\n  PSCU_CLIENT_ID: Int!\n  VENDOR_NAME: String!\n}\n\ninput CreateREDIRECT_URLInput {\n  ORIGIN_PRODUCT_ID: Int!\n  URL_TYPE_CODE: String!\n  URL: String!\n  RESPONSE_TEXT: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n}\n\ninput UpdateREDIRECT_URLInput {\n  REDIRECT_URL_ID: Int!\n  ORIGIN_PRODUCT_ID: Int!\n  URL_TYPE_CODE: String!\n  URL: String!\n  RESPONSE_TEXT: String\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ninput DeleteREDIRECT_URLInput {\n  REDIRECT_URL_ID: Int!\n}\n\ninput CreateSERVICE_PROVIDERInput {\n  SERVICE_PROVIDER_NAME: String!\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n}\n\ninput UpdateSERVICE_PROVIDERInput {\n  SERVICE_PROVIDER_ID: Int!\n  SERVICE_PROVIDER_NAME: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ninput DeleteSERVICE_PROVIDERInput {\n  SERVICE_PROVIDER_ID: Int!\n}\n\ninput CreateSERVICEInput {\n  SERVICE_PROVIDER_ID: Int!\n  URI: String!\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n}\n\ninput UpdateSERVICEInput {\n  SERVICE_ID: Int!\n  SERVICE_PROVIDER_ID: Int!\n  URI: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ninput DeleteSERVICEInput {\n  SERVICE_ID: Int!\n}\n\ninput CreateSERVICE_PARAMInput {\n  SERVICE_ID: Int!\n  PARAM_NAME: String!\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n}\n\ninput UpdateSERVICE_PARAMInput {\n  SERVICE_PARAM_ID: Int!\n  SERVICE_ID: Int!\n  PARAM_NAME: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ninput DeleteSERVICE_PARAMInput {\n  SERVICE_PARAM_ID: Int!\n}\n\ninput CreateSERVICE_PARAM_MAPPINGInput {\n  ORIGIN_PRODUCT_ID: Int!\n  SYSTEM_NBR: String\n  PRIN_NBR: String\n  AGENT_NBR: String\n  SOURCE_SERVICE_PARAM_ID: Int!\n  TARGET_SERVICE_PARAM_ID: Int!\n  PLASTIC_TYPE_ID: Int\n  COMMENT_TEXT: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n}\n\ninput UpdateSERVICE_PARAM_MAPPINGInput {\n  SERVICE_PARAM_MAPPING_ID: Int!\n  ORIGIN_PRODUCT_ID: Int!\n  SYSTEM_NBR: String\n  PRIN_NBR: String\n  AGENT_NBR: String\n  SOURCE_SERVICE_PARAM_ID: Int!\n  TARGET_SERVICE_PARAM_ID: Int!\n  PLASTIC_TYPE_ID: Int\n  COMMENT_TEXT: String\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ninput DeleteSERVICE_PARAM_MAPPINGInput {\n  SERVICE_PARAM_MAPPING_ID: Int!\n}\n\ninput CreateSERVICE_EXPR_MAPPINGInput {\n  SERVICE_PARAM_MAPPING_ID: Int!\n  SOURCE_EXPR: String!\n  TARGET_EXPR: String!\n  COMMENT_TEXT: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n}\n\ninput UpdateSERVICE_EXPR_MAPPINGInput {\n  SERVICE_EXPR_MAPPING_ID: Int!\n  SERVICE_PARAM_MAPPING_ID: Int!\n  SOURCE_EXPR: String!\n  TARGET_EXPR: String!\n  COMMENT_TEXT: String\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ninput DeleteSERVICE_EXPR_MAPPINGInput {\n  SERVICE_EXPR_MAPPING_ID: Int!\n}\n\ninput CreateSTEP_TYPEInput {\n  STEP_TYPE_NAME: String!\n  STEP_TYPE_DESC: String\n  RESOURCE_NAME: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n}\n\ninput UpdateSTEP_TYPEInput {\n  STEP_TYPE_ID: Int!\n  STEP_TYPE_NAME: String!\n  STEP_TYPE_DESC: String\n  RESOURCE_NAME: String\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ninput DeleteSTEP_TYPEInput {\n  STEP_TYPE_ID: Int!\n}\n\ninput CreateSTEP_SERVICE_MAPPINGInput {\n  STEP_TYPE_ID: Int!\n  SERVICE_ID: Int!\n  SEQUENCE_NBR: Int!\n}\n\ninput UpdateSTEP_SERVICE_MAPPINGInput {\n  STEP_SERVICE_MAPPING_ID: Int!\n  STEP_TYPE_ID: Int!\n  SERVICE_ID: Int!\n  SEQUENCE_NBR: Int!\n}\n\ninput DeleteSTEP_SERVICE_MAPPINGInput {\n  STEP_SERVICE_MAPPING_ID: Int!\n}\n\ninput UpdateORIGIN_PRODUCTInput {\n  ORIGIN_PRODUCT_ID: Int!\n  VENDOR_NAME: String!\n  PRODUCT_ID: String!\n  PRODUCT_DESC: String!\n  PSCU_CLIENT_ID: Int!\n  PARTNER_CODE: String\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ninput DeleteORIGIN_PRODUCTInput {\n  ORIGIN_PRODUCT_ID: Int!\n}\n\ntype ORIGIN_PRODUCTConnection {\n  items: [ORIGIN_PRODUCT]\n  nextToken: String\n}\n\ntype SERVICE_PROVIDERConnection {\n  items: [SERVICE_PROVIDER]\n  nextToken: String\n}\n\ntype SERVICEConnection {\n  items: [SERVICE]\n  nextToken: String\n}\n\ntype SERVICE_PARAMConnection {\n  items: [SERVICE_PARAM]\n  nextToken: String\n}\n\ntype SERVICE_PARAM_MAPPINGConnection {\n  items: [SERVICE_PARAM_MAPPING]\n  nextToken: String\n}\n\ntype SERVICE_EXPR_MAPPINGConnection {\n  items: [SERVICE_EXPR_MAPPING]\n  nextToken: String\n}\n\ntype STEP_TYPEConnection {\n  items: [STEP_TYPE]\n  nextToken: String\n}\n\ntype STEP_SERVICE_MAPPINGConnection {\n  items: [STEP_SERVICE_MAPPING]\n  nextToken: String\n}\n\ntype REDIRECT_URLConnection {\n  items: [REDIRECT_URL]\n  nextToken: String\n}\n\ntype Query {\n  \n    listCONFIG_PARAMS: [CONFIG_PARAM] @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listLOAN_APPS: [LOAN_APP] @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listNEW_MEMBER_TOKENS: [NEW_MEMBER_TOKEN] @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listORIGIN_PRODUCTS: ORIGIN_PRODUCTConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listSERVICE_PROVIDERS: SERVICE_PROVIDERConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listSERVICES: SERVICEConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listSERVICE_PARAMS: SERVICE_PARAMConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listSERVICE_PARAM_MAPPINGS: SERVICE_PARAM_MAPPINGConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listSERVICE_EXPR_MAPPINGS: SERVICE_EXPR_MAPPINGConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listSTEP_TYPES: STEP_TYPEConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listSTEP_SERVICE_MAPPINGS: STEP_SERVICE_MAPPINGConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n  listREDIRECT_URLS: REDIRECT_URLConnection @aws_auth(cognito_groups: [\"readonly\", \"developer\", \"deployment\", \"admin\"])\n}\n\ntype Mutation {\n  \n    createCONFIG_PARAM(input: CreateCONFIG_PARAMInput!): CONFIG_PARAM @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createLOAN_APP(input: CreateLOAN_APPInput!): LOAN_APP @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createNEW_MEMBER_TOKEN(input: CreateNEW_MEMBER_TOKENInput!): NEW_MEMBER_TOKEN @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createORIGIN_PRODUCT(input: CreateORIGIN_PRODUCTInput!): ORIGIN_PRODUCT @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createSERVICE_PROVIDER(input: CreateSERVICE_PROVIDERInput!): SERVICE_PROVIDER @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createSERVICE(input: CreateSERVICEInput!): SERVICE @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createSERVICE_PARAM(input: CreateSERVICE_PARAMInput!): SERVICE_PARAM @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createSERVICE_PARAM_MAPPING(input: CreateSERVICE_PARAM_MAPPINGInput!): SERVICE_PARAM_MAPPING @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createSERVICE_EXPR_MAPPING(input: CreateSERVICE_EXPR_MAPPINGInput!): SERVICE_EXPR_MAPPING @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createSTEP_TYPE(input: CreateSTEP_TYPEInput!): STEP_TYPE @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createSTEP_SERVICE_MAPPING(input: CreateSTEP_SERVICE_MAPPINGInput!): STEP_SERVICE_MAPPING @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  createREDIRECT_URL(input: CreateREDIRECT_URLInput!): REDIRECT_URL @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  \n    updateORIGIN_PRODUCT(input: UpdateORIGIN_PRODUCTInput!): ORIGIN_PRODUCT @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  updateSERVICE_PROVIDER(input: UpdateSERVICE_PROVIDERInput!): SERVICE_PROVIDER @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  updateSERVICE(input: UpdateSERVICEInput!): SERVICE @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  updateSERVICE_PARAM(input: UpdateSERVICE_PARAMInput!): SERVICE_PARAM @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  updateSERVICE_PARAM_MAPPING(input: UpdateSERVICE_PARAM_MAPPINGInput!): SERVICE_PARAM_MAPPING @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  updateSERVICE_EXPR_MAPPING(input: UpdateSERVICE_EXPR_MAPPINGInput!): SERVICE_EXPR_MAPPING @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  updateSTEP_TYPE(input: UpdateSTEP_TYPEInput!): STEP_TYPE @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  updateSTEP_SERVICE_MAPPING(input: UpdateSTEP_SERVICE_MAPPINGInput!): STEP_SERVICE_MAPPING @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  updateREDIRECT_URL(input: UpdateREDIRECT_URLInput!): REDIRECT_URL @aws_auth(cognito_groups: [\"developer\", \"deployment\", \"admin\"])\n  \n    deleteORIGIN_PRODUCT(input: DeleteORIGIN_PRODUCTInput!): ORIGIN_PRODUCT @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n  deleteSERVICE_PROVIDER(input: DeleteSERVICE_PROVIDERInput!): SERVICE_PROVIDER @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n  deleteSERVICE(input: DeleteSERVICEInput!): SERVICE @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n  deleteSERVICE_PARAM(input: DeleteSERVICE_PARAMInput!): SERVICE_PARAM @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n  deleteSERVICE_PARAM_MAPPING(input: DeleteSERVICE_PARAM_MAPPINGInput!): SERVICE_PARAM_MAPPING @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n  deleteSERVICE_EXPR_MAPPING(input: DeleteSERVICE_EXPR_MAPPINGInput!): SERVICE_EXPR_MAPPING @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n  deleteSTEP_TYPE(input: DeleteSTEP_TYPEInput!): STEP_TYPE @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n  deleteSTEP_SERVICE_MAPPING(input: DeleteSTEP_SERVICE_MAPPINGInput!): STEP_SERVICE_MAPPING @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n  deleteREDIRECT_URL(input: DeleteREDIRECT_URLInput!): REDIRECT_URL @aws_auth(cognito_groups: [\"deployment\", \"admin\"])\n}\n\ntype SERVICE_PROVIDER {\n  SERVICE_PROVIDER_ID: Int!\n  SERVICE_PROVIDER_NAME: String!\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ntype SERVICE {\n  SERVICE_ID: Int!\n  SERVICE_PROVIDER_ID: Int!\n  URI: String!\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ntype SERVICE_PARAM {\n  SERVICE_PARAM_ID: Int!\n  SERVICE_ID: Int!\n  PARAM_NAME: String!\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ntype SERVICE_PARAM_MAPPING {\n  SERVICE_PARAM_MAPPING_ID: Int!\n  ORIGIN_PRODUCT_ID: Int!\n  SYSTEM_NBR: String\n  PRIN_NBR: String\n  AGENT_NBR: String\n  SOURCE_SERVICE_PARAM_ID: Int!\n  TARGET_SERVICE_PARAM_ID: Int!\n  PLASTIC_TYPE_ID: Int\n  COMMENT_TEXT: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ntype SERVICE_EXPR_MAPPING {\n  SERVICE_EXPR_MAPPING_ID: Int!\n  SERVICE_PARAM_MAPPING_ID: Int!\n  SOURCE_EXPR: String!\n  TARGET_EXPR: String!\n  COMMENT_TEXT: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ntype STEP_TYPE {\n  STEP_TYPE_ID: Int!\n  STEP_TYPE_NAME: String!\n  STEP_TYPE_DESC: String\n  RESOURCE_NAME: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ntype STEP_SERVICE_MAPPING {\n  STEP_SERVICE_MAPPING_ID: Int!\n  STEP_TYPE_ID: Int!\n  SERVICE_ID: Int!\n  SEQUENCE_NBR: Int!\n}\n\ntype REDIRECT_URL {\n  REDIRECT_URL_ID: Int!\n  ORIGIN_PRODUCT_ID: Int!\n  URL_TYPE_CODE: String!\n  URL: String!\n  RESPONSE_TEXT: String\n  CREATED_BY_USER_ID: Int!\n  CREATED_DATE: String!\n  CHANGED_BY_USER_ID: Int\n  CHANGED_DATE: String\n}\n\ntype Subscription {\n  onCreateCONFIG_PARAM: CONFIG_PARAM\n  onCreateLOAN_APP: LOAN_APP\n  onCreateNEW_MEMBER_TOKEN: NEW_MEMBER_TOKEN\n  onCreateORIGIN_PRODUCT: ORIGIN_PRODUCT\n}",
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        }
      }
    },
    "GraphQlDsStageDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "Name": "StageDataSource",
        "Type": "RELATIONAL_DATABASE",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "RDSServiceRole",
            "Arn"
          ]
        },
        "RelationalDatabaseConfig": {
          "RdsHttpEndpointConfig": {
            "AwsRegion": "us-east-2",
            "DbClusterIdentifier": {
              "Fn::Join": [
                ":",
                [
                  "arn",
                  "aws",
                  "rds",
                  "us-east-2",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  "cluster",
                  "hazel-mapping"
                ]
              ]
            },
            "DatabaseName": "hazel_mapping_dev",
            "AwsSecretStoreArn": "arn:aws:secretsmanager:us-east-2:794611117044:secret:rds!cluster-a11d98c5-d647-45a2-9978-f81be7aa3d60-iDsvX3"
          },
          "RelationalDatabaseSourceType": "RDS_HTTP_ENDPOINT"
        }
      }
    },
    "GraphQlResolverQuerylistCONFIGPARAMS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listCONFIG_PARAMS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM CONFIG_PARAM\"\n  ]\n}",
        "ResponseMappingTemplate": "## Raise a GraphQL field error in case of a datasource invocation error\r\n#if($ctx.error)\r\n    $utils.error($ctx.error.message, $ctx.error.type)\r\n#end\r\n\r\n$utils.toJson($utils.rds.toJsonObject($ctx.result)[0])",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistLOANAPPS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listLOAN_APPS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM LOAN_APP\"\n  ]\n}",
        "ResponseMappingTemplate": "## Raise a GraphQL field error in case of a datasource invocation error\r\n#if($ctx.error)\r\n    $utils.error($ctx.error.message, $ctx.error.type)\r\n#end\r\n\r\n$utils.toJson($utils.rds.toJsonObject($ctx.result)[0])",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistNEWMEMBERTOKENS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listNEW_MEMBER_TOKENS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM NEW_MEMBER_TOKEN\"\n  ]\n}",
        "ResponseMappingTemplate": "$util.toJson($context.result.sqlStatementResults[0])",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistORIGINPRODUCTS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listORIGIN_PRODUCTS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT ORIGIN_PRODUCT_ID, VENDOR_NAME, PRODUCT_ID, PRODUCT_DESC, PSCU_CLIENT_ID, PARTNER_CODE, CREATED_BY_USER_ID, CREATED_DATE, CHANGED_BY_USER_ID, CHANGED_DATE FROM ORIGIN_PRODUCT ORDER BY ORIGIN_PRODUCT_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "## Raise a GraphQL field error in case of a datasource invocation error\n#if($ctx.error)\n    $utils.error($ctx.error.message, $ctx.error.type)\n#end\n\n#set($result = $utils.rds.toJsonObject($ctx.result)[0])\n#set($items = $result)\n#set($hasNextToken = false)\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\n  #set($hasNextToken = true)\n  #set($nextTokenValue = $ctx.args.nextToken)\n  #if(!$nextTokenValue)\n    #set($nextTokenValue = 0)\n  #end\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\n#end\n{\n  \"items\": $util.toJson($items),\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistSERVICEPROVIDERS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listSERVICE_PROVIDERS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT SERVICE_PROVIDER_ID, SERVICE_PROVIDER_NAME, CREATED_BY_USER_ID, CREATED_DATE, CHANGED_BY_USER_ID, CHANGED_DATE FROM SERVICE_PROVIDER ORDER BY SERVICE_PROVIDER_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "## Raise a GraphQL field error in case of a datasource invocation error\r\n#if($ctx.error)\r\n    $utils.error($ctx.error.message, $ctx.error.type)\r\n#end\r\n\r\n#set($result = $utils.rds.toJsonObject($ctx.result)[0])\r\n#set($items = $result)\r\n#set($hasNextToken = false)\r\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\r\n  #set($hasNextToken = true)\r\n  #set($nextTokenValue = $ctx.args.nextToken)\r\n  #if(!$nextTokenValue)\r\n    #set($nextTokenValue = 0)\r\n  #end\r\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\r\n#end\r\n{\r\n  \"items\": $util.toJson($items),\r\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\r\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistSERVICES": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listSERVICES",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM SERVICE ORDER BY SERVICE_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "## Raise a GraphQL field error in case of a datasource invocation error\r\n#if($ctx.error)\r\n    $utils.error($ctx.error.message, $ctx.error.type)\r\n#end\r\n\r\n#set($result = $utils.rds.toJsonObject($ctx.result)[0])\r\n#set($items = $result)\r\n#set($hasNextToken = false)\r\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\r\n  #set($hasNextToken = true)\r\n  #set($nextTokenValue = $ctx.args.nextToken)\r\n  #if(!$nextTokenValue)\r\n    #set($nextTokenValue = 0)\r\n  #end\r\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\r\n#end\r\n{\r\n  \"items\": $util.toJson($items),\r\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\r\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistREDIRECTURLS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listREDIRECT_URLS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT REDIRECT_URL_ID, ORIGIN_PRODUCT_ID, URL_TYPE_CODE, URL, RESPONSE_TEXT, CREATED_BY_USER_ID, CREATED_DATE, CHANGED_BY_USER_ID, CHANGED_DATE FROM REDIRECT_URL ORDER BY REDIRECT_URL_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "## Raise a GraphQL field error in case of a datasource invocation error\n#if($ctx.error)\n    $utils.error($ctx.error.message, $ctx.error.type)\n#end\n\n#set($result = $utils.rds.toJsonObject($ctx.result)[0])\n#set($items = $result)\n#set($hasNextToken = false)\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\n  #set($hasNextToken = true)\n  #set($nextTokenValue = $ctx.args.nextToken)\n  #if(!$nextTokenValue)\n    #set($nextTokenValue = 0)\n  #end\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\n#end\n{\n  \"items\": $util.toJson($items),\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistSERVICEPARAMS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listSERVICE_PARAMS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM SERVICE_PARAM ORDER BY SERVICE_PARAM_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "#set($result = $utils.rds.toJsonObject($ctx.result)[0])\r\n#set($items = $result)\r\n#set($hasNextToken = false)\r\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\r\n  #set($hasNextToken = true)\r\n  #set($nextTokenValue = $ctx.args.nextToken)\r\n  #if(!$nextTokenValue)\r\n    #set($nextTokenValue = 0)\r\n  #end\r\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\r\n#end\r\n{\r\n  \"items\": $util.toJson($items),\r\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\r\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistSERVICEPARAMMAPPINGS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listSERVICE_PARAM_MAPPINGS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM SERVICE_PARAM_MAPPING ORDER BY SERVICE_PARAM_MAPPING_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "#set($result = $utils.rds.toJsonObject($ctx.result)[0])\r\n#set($items = $result)\r\n#set($hasNextToken = false)\r\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\r\n  #set($hasNextToken = true)\r\n  #set($nextTokenValue = $ctx.args.nextToken)\r\n  #if(!$nextTokenValue)\r\n    #set($nextTokenValue = 0)\r\n  #end\r\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\r\n#end\r\n{\r\n  \"items\": $util.toJson($items),\r\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\r\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistSTEPTYPES": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listSTEP_TYPES",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM STEP_TYPE ORDER BY STEP_TYPE_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "#set($result = $utils.rds.toJsonObject($ctx.result)[0])\r\n#set($items = $result)\r\n#set($hasNextToken = false)\r\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\r\n  #set($hasNextToken = true)\r\n  #set($nextTokenValue = $ctx.args.nextToken)\r\n  #if(!$nextTokenValue)\r\n    #set($nextTokenValue = 0)\r\n  #end\r\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\r\n#end\r\n{\r\n  \"items\": $util.toJson($items),\r\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\r\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistSTEPSERVICEMAPPINGS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listSTEP_SERVICE_MAPPINGS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM STEP_SERVICE_MAPPING ORDER BY STEP_SERVICE_MAPPING_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "#set($result = $utils.rds.toJsonObject($ctx.result)[0])\r\n#set($items = $result)\r\n#set($hasNextToken = false)\r\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\r\n  #set($hasNextToken = true)\r\n  #set($nextTokenValue = $ctx.args.nextToken)\r\n  #if(!$nextTokenValue)\r\n    #set($nextTokenValue = 0)\r\n  #end\r\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\r\n#end\r\n{\r\n  \"items\": $util.toJson($items),\r\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\r\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverQuerylistSERVICEEXPRMAPPINGS": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Query",
        "FieldName": "listSERVICE_EXPR_MAPPINGS",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"SELECT * FROM SERVICE_EXPR_MAPPING ORDER BY SERVICE_EXPR_MAPPING_ID#if($ctx.args.nextToken) OFFSET $ctx.args.nextToken#end#if($ctx.args.limit) LIMIT $ctx.args.limit#end\"\n  ]\n}",
        "ResponseMappingTemplate": "#set($result = $utils.rds.toJsonObject($ctx.result)[0])\r\n#set($items = $result)\r\n#set($hasNextToken = false)\r\n#if($ctx.args.limit && $items.size() == $ctx.args.limit)\r\n  #set($hasNextToken = true)\r\n  #set($nextTokenValue = $ctx.args.nextToken)\r\n  #if(!$nextTokenValue)\r\n    #set($nextTokenValue = 0)\r\n  #end\r\n  #set($nextTokenValue = $nextTokenValue + $ctx.args.limit)\r\n#end\r\n{\r\n  \"items\": $util.toJson($items),\r\n  #if($hasNextToken)\"nextToken\": \"$nextTokenValue\"#else\"nextToken\": null#end\r\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverMutationcreateORIGINPRODUCT": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "createORIGIN_PRODUCT",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"INSERT INTO ORIGIN_PRODUCT (VENDOR_NAME, PRODUCT_ID, PRODUCT_DESC, PSCU_CLIENT_ID, PARTNER_CODE, CREATED_BY_USER_ID, CREATED_DATE) VALUES (:VENDOR_NAME, :PRODUCT_ID, :PRODUCT_DESC, :PSCU_CLIENT_ID, :PARTNER_CODE, :CREATED_BY_USER_ID, :CREATED_DATE)\"\n  ],\n  \"variableMap\": {\n    \":VENDOR_NAME\": $util.toJson($ctx.args.input.VENDOR_NAME),\n    \":PRODUCT_ID\": $util.toJson($ctx.args.input.PRODUCT_ID),\n    \":PRODUCT_DESC\": $util.toJson($ctx.args.input.PRODUCT_DESC),\n    \":PSCU_CLIENT_ID\": $util.toJson($ctx.args.input.PSCU_CLIENT_ID),\n    \":PARTNER_CODE\": $util.toJson($ctx.args.input.PARTNER_CODE),\n    \":CREATED_BY_USER_ID\": $util.toJson($ctx.args.input.CREATED_BY_USER_ID),\n    \":CREATED_DATE\": $util.toJson($ctx.args.input.CREATED_DATE)\n  }\n}",
        "ResponseMappingTemplate": "#if($ctx.error)\n  $util.error($ctx.error.message, $ctx.error.type)\n#end\n\n{\n  \"ORIGIN_PRODUCT_ID\": 999,\n  \"VENDOR_NAME\": \"$ctx.args.input.VENDOR_NAME\",\n  \"PRODUCT_ID\": \"$ctx.args.input.PRODUCT_ID\",\n  \"PRODUCT_DESC\": \"$ctx.args.input.PRODUCT_DESC\",\n  \"PSCU_CLIENT_ID\": $ctx.args.input.PSCU_CLIENT_ID,\n  \"PARTNER_CODE\": \"$ctx.args.input.PARTNER_CODE\",\n  \"CREATED_BY_USER_ID\": $ctx.args.input.CREATED_BY_USER_ID,\n  \"CREATED_DATE\": \"$ctx.args.input.CREATED_DATE\",\n  \"CHANGED_BY_USER_ID\": null,\n  \"CHANGED_DATE\": null\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverMutationupdateORIGINPRODUCT": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "updateORIGIN_PRODUCT",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"UPDATE ORIGIN_PRODUCT SET VENDOR_NAME = :VENDOR_NAME, PRODUCT_ID = :PRODUCT_ID, PRODUCT_DESC = :PRODUCT_DESC, PSCU_CLIENT_ID = :PSCU_CLIENT_ID, PARTNER_CODE = :PARTNER_CODE, CHANGED_BY_USER_ID = :CHANGED_BY_USER_ID, CHANGED_DATE = :CHANGED_DATE WHERE ORIGIN_PRODUCT_ID = :ORIGIN_PRODUCT_ID\"\n  ],\n  \"variableMap\": {\n    \":ORIGIN_PRODUCT_ID\": $util.toJson($ctx.args.input.ORIGIN_PRODUCT_ID),\n    \":VENDOR_NAME\": $util.toJson($ctx.args.input.VENDOR_NAME),\n    \":PRODUCT_ID\": $util.toJson($ctx.args.input.PRODUCT_ID),\n    \":PRODUCT_DESC\": $util.toJson($ctx.args.input.PRODUCT_DESC),\n    \":PSCU_CLIENT_ID\": $util.toJson($ctx.args.input.PSCU_CLIENT_ID),\n    \":PARTNER_CODE\": $util.toJson($ctx.args.input.PARTNER_CODE),\n    \":CHANGED_BY_USER_ID\": $util.toJson($ctx.args.input.CHANGED_BY_USER_ID),\n    \":CHANGED_DATE\": $util.toJson($ctx.args.input.CHANGED_DATE)\n  }\n}",
        "ResponseMappingTemplate": "#if($ctx.error)\n  $util.error($ctx.error.message, $ctx.error.type)\n#end\n\n{\n  \"ORIGIN_PRODUCT_ID\": $ctx.args.input.ORIGIN_PRODUCT_ID,\n  \"VENDOR_NAME\": \"$ctx.args.input.VENDOR_NAME\",\n  \"PRODUCT_ID\": \"$ctx.args.input.PRODUCT_ID\",\n  \"PRODUCT_DESC\": \"$ctx.args.input.PRODUCT_DESC\",\n  \"PSCU_CLIENT_ID\": $ctx.args.input.PSCU_CLIENT_ID,\n  \"PARTNER_CODE\": \"$ctx.args.input.PARTNER_CODE\",\n  \"CREATED_BY_USER_ID\": 1,\n  \"CREATED_DATE\": \"2024-01-01\",\n  \"CHANGED_BY_USER_ID\": $ctx.args.input.CHANGED_BY_USER_ID,\n  \"CHANGED_DATE\": \"$ctx.args.input.CHANGED_DATE\"\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverMutationdeleteORIGINPRODUCT": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "deleteORIGIN_PRODUCT",
        "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"DELETE FROM ORIGIN_PRODUCT WHERE ORIGIN_PRODUCT_ID = :ORIGIN_PRODUCT_ID\"\n  ],\n  \"variableMap\": {\n    \":ORIGIN_PRODUCT_ID\": $util.toJson($ctx.args.input.ORIGIN_PRODUCT_ID)\n  }\n}",
        "ResponseMappingTemplate": "#if($ctx.error)\n  $util.error($ctx.error.message, $ctx.error.type)\n#end\n\n{\n  \"ORIGIN_PRODUCT_ID\": $ctx.args.input.ORIGIN_PRODUCT_ID,\n  \"VENDOR_NAME\": \"DELETED\",\n  \"PRODUCT_ID\": \"DELETED\",\n  \"PRODUCT_DESC\": \"DELETED\",\n  \"PSCU_CLIENT_ID\": 0,\n  \"PARTNER_CODE\": null,\n  \"CREATED_BY_USER_ID\": 1,\n  \"CREATED_DATE\": \"2024-01-01\",\n  \"CHANGED_BY_USER_ID\": null,\n  \"CHANGED_DATE\": null\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverMutationcreateREDIRECTURL": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "createREDIRECT_URL",
        "RequestMappingTemplate": "## Authorization check\n#if(!$ctx.identity || !$ctx.identity.sub)\n  $util.unauthorized()\n#end\n\n## Input validation\n#if(!$ctx.args.input.URL || $ctx.args.input.URL.length() == 0)\n  $util.error(\"URL is required\", \"ValidationError\")\n#end\n#if(!$ctx.args.input.URL_TYPE_CODE.matches(\"^[EN]$\"))\n  $util.error(\"URL_TYPE_CODE must be E or N\", \"ValidationError\")\n#end\n\n{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"INSERT INTO REDIRECT_URL (ORIGIN_PRODUCT_ID, URL_TYPE_CODE, URL, RESPONSE_TEXT, CREATED_BY_USER_ID, CREATED_DATE) VALUES (:ORIGIN_PRODUCT_ID, :URL_TYPE_CODE, :URL, :RESPONSE_TEXT, :CREATED_BY_USER_ID, :CREATED_DATE)\"\n  ],\n  \"variableMap\": {\n    \":ORIGIN_PRODUCT_ID\": $util.toJson($ctx.args.input.ORIGIN_PRODUCT_ID),\n    \":URL_TYPE_CODE\": $util.toJson($ctx.args.input.URL_TYPE_CODE),\n    \":URL\": $util.toJson($ctx.args.input.URL),\n    \":RESPONSE_TEXT\": $util.toJson($ctx.args.input.RESPONSE_TEXT),\n    \":CREATED_BY_USER_ID\": $util.toJson($ctx.identity.sub),\n    \":CREATED_DATE\": $util.toJson($util.time.nowISO8601())\n  }\n}",
        "ResponseMappingTemplate": "#if($ctx.error)\n  $util.error($ctx.error.message, $ctx.error.type)\n#end\n\n{\n  \"REDIRECT_URL_ID\": 999,\n  \"ORIGIN_PRODUCT_ID\": $ctx.args.input.ORIGIN_PRODUCT_ID,\n  \"URL_TYPE_CODE\": \"$ctx.args.input.URL_TYPE_CODE\",\n  \"URL\": \"$ctx.args.input.URL\",\n  \"RESPONSE_TEXT\": \"$ctx.args.input.RESPONSE_TEXT\",\n  \"CREATED_BY_USER_ID\": $ctx.args.input.CREATED_BY_USER_ID,\n  \"CREATED_DATE\": \"$ctx.args.input.CREATED_DATE\",\n  \"CHANGED_BY_USER_ID\": null,\n  \"CHANGED_DATE\": null\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverMutationupdateREDIRECTURL": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "updateREDIRECT_URL",
        "RequestMappingTemplate": "## Authorization check\n#if(!$ctx.identity || !$ctx.identity.sub)\n  $util.unauthorized()\n#end\n\n## Input validation\n#if(!$ctx.args.input.URL || $ctx.args.input.URL.length() == 0)\n  $util.error(\"URL is required\", \"ValidationError\")\n#end\n#if(!$ctx.args.input.URL_TYPE_CODE.matches(\"^[EN]$\"))\n  $util.error(\"URL_TYPE_CODE must be E or N\", \"ValidationError\")\n#end\n\n{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"UPDATE REDIRECT_URL SET ORIGIN_PRODUCT_ID = :ORIGIN_PRODUCT_ID, URL_TYPE_CODE = :URL_TYPE_CODE, URL = :URL, RESPONSE_TEXT = :RESPONSE_TEXT, CHANGED_BY_USER_ID = :CHANGED_BY_USER_ID, CHANGED_DATE = :CHANGED_DATE WHERE REDIRECT_URL_ID = :REDIRECT_URL_ID\"\n  ],\n  \"variableMap\": {\n    \":REDIRECT_URL_ID\": $util.toJson($ctx.args.input.REDIRECT_URL_ID),\n    \":ORIGIN_PRODUCT_ID\": $util.toJson($ctx.args.input.ORIGIN_PRODUCT_ID),\n    \":URL_TYPE_CODE\": $util.toJson($ctx.args.input.URL_TYPE_CODE),\n    \":URL\": $util.toJson($ctx.args.input.URL),\n    \":RESPONSE_TEXT\": $util.toJson($ctx.args.input.RESPONSE_TEXT),\n    \":CHANGED_BY_USER_ID\": $util.toJson($ctx.identity.sub),\n    \":CHANGED_DATE\": $util.toJson($util.time.nowISO8601())\n  }\n}",
        "ResponseMappingTemplate": "#if($ctx.error)\n  $util.error($ctx.error.message, $ctx.error.type)\n#end\n\n{\n  \"REDIRECT_URL_ID\": $ctx.args.input.REDIRECT_URL_ID,\n  \"ORIGIN_PRODUCT_ID\": $ctx.args.input.ORIGIN_PRODUCT_ID,\n  \"URL_TYPE_CODE\": \"$ctx.args.input.URL_TYPE_CODE\",\n  \"URL\": \"$ctx.args.input.URL\",\n  \"RESPONSE_TEXT\": \"$ctx.args.input.RESPONSE_TEXT\",\n  \"CREATED_BY_USER_ID\": 1,\n  \"CREATED_DATE\": \"2024-01-01\",\n  \"CHANGED_BY_USER_ID\": $ctx.args.input.CHANGED_BY_USER_ID,\n  \"CHANGED_DATE\": \"$ctx.args.input.CHANGED_DATE\"\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    },
    "GraphQlResolverMutationdeleteREDIRECTURL": {
      "Type": "AWS::AppSync::Resolver",
      "DependsOn": "GraphQlSchema",
      "Properties": {
        "ApiId": {
          "Fn::GetAtt": [
            "GraphQlApi",
            "ApiId"
          ]
        },
        "TypeName": "Mutation",
        "FieldName": "deleteREDIRECT_URL",
        "RequestMappingTemplate": "## Authorization check\n#if(!$ctx.identity || !$ctx.identity.sub)\n  $util.unauthorized()\n#end\n\n## Additional security: Only allow deletion of own records (optional)\n## Uncomment to enable:\n## SELECT CREATED_BY_USER_ID FROM REDIRECT_URL WHERE REDIRECT_URL_ID = :REDIRECT_URL_ID AND CREATED_BY_USER_ID = :USER_ID\n\n{\n  \"version\": \"2018-05-29\",\n  \"statements\": [\n    \"DELETE FROM REDIRECT_URL WHERE REDIRECT_URL_ID = :REDIRECT_URL_ID\"\n  ],\n  \"variableMap\": {\n    \":REDIRECT_URL_ID\": $util.toJson($ctx.args.input.REDIRECT_URL_ID)\n  }\n}",
        "ResponseMappingTemplate": "#if($ctx.error)\n  $util.error($ctx.error.message, $ctx.error.type)\n#end\n\n{\n  \"REDIRECT_URL_ID\": $ctx.args.input.REDIRECT_URL_ID,\n  \"ORIGIN_PRODUCT_ID\": 1,\n  \"URL_TYPE_CODE\": \"DELETED\",\n  \"URL\": \"DELETED\",\n  \"RESPONSE_TEXT\": null,\n  \"CREATED_BY_USER_ID\": 1,\n  \"CREATED_DATE\": \"2024-01-01\",\n  \"CHANGED_BY_USER_ID\": null,\n  \"CHANGED_DATE\": null\n}",
        "Kind": "UNIT",
        "DataSourceName": {
          "Fn::GetAtt": [
            "GraphQlDsStageDataSource",
            "Name"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "hazel-mapping-serverless-deployment-bucket",
      "Export": {
        "Name": "sls-vue-appsync-api-dev-ServerlessDeploymentBucketName"
      }
    },
    "GraphQlApiKeyDefault": {
      "Value": {
        "Fn::GetAtt": [
          "GraphQlApiKeyDefault",
          "ApiKey"
        ]
      }
    },
    "GraphQlApiId": {
      "Value": {
        "Fn::GetAtt": [
          "GraphQlApi",
          "ApiId"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-GraphQlApiId"
        }
      }
    },
    "GraphQlApiUrl": {
      "Value": {
        "Fn::GetAtt": [
          "GraphQlApi",
          "GraphQLUrl"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-GraphQlApiUrl"
        }
      }
    }
  }
}