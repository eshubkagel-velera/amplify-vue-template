{
  "openapi": "3.0.3",
  "info": {
    "title": "NXTsoft Financial Institution Data",
    "description": "<br/>\n| Service for Retrieving Financial Institution level data.\n<br/>\n<br/>\n<h1>Change Log</h1>\n\n|Change Date|Version|Operations|Description                                                                                                         |\n|--------------------|-------|---------------|--------------------------------------------------------------------------------------------|\n|10/10/2022|1.0.3|Service Dictionary Query|Add \"Include extended elements\" array.|\n|09/02/2022|1.0.2|All|Move API description and realign sidebar.|\n|08/16/2022|1.0.1|Service Dictionary Query|Initial development for Service Dictionary Search endpoint.|\n|07/07/2022|1.0.0|FIData Search|Initial development for FIData\n",
    "contact": {
      "name": "API Support",
      "email": "apisupport@nxtsoft.com",
      "url": "https://omniportal.nxtsoft.com/"
    },
    "version": "v1",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://api-test.nxtsoft.com/v1/fidata",
      "description": "Test Based URL"
    },
    {
      "url": "https://api.nxtsoft.com/v1/fidata",
      "description": "Production Based URL"
    }
  ],
  "paths": {
    "/fidataquery": {
      "post": {
        "tags": [
          "Financial Institution Data Operations"
        ],
        "operationId": "fiDataQuery",
        "summary": "Retrieve financial institution data.",
        "requestBody": {
          "description": "Request to retrieve financial institution data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FinancialInstitutionDataRq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialInstitutionDataRs"
                }
              }
            }
          }
        }
      }
    },
    "/servicedictionaryquery": {
      "post": {
        "tags": [
          "JXChange Service Dictionary Operations"
        ],
        "operationId": "serviceDictionaryQuery",
        "summary": "Search service dictionary data.",
        "requestBody": {
          "description": "Request to retrieve service dictionary data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceDictionaryDataRq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDictionaryDataRs"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "oAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.nxtsoft.com/oauth2/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "FinancialInstitutionDataRq": {
        "type": "object",
        "properties": {
          "assetID": {
            "type": "string",
            "description": "A specific software-based key for identifying a client utilizing the Omni Platform. NXTsoft provides the unique value to the partner, vendor, or client."
          },
          "content": {
            "type": "object",
            "properties": {
              "financialInstitutionRoutingID": {
                "type": "string",
                "description": "The number assigned to financial institutions for routing as assigned by the American Bankers Association. Any leading zeros must be provided for a complete routing and transit number."
              }
            }
          },
          "uuid": {
            "type": "string",
            "description": "Unique identifier for the request."
          }
        },
        "required": [
          "assetID"
        ]
      },
      "FinancialInstitutionDataRs": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "properties": {
              "financialInstitutionAssetSize": {
                "type": "string",
                "description": "The financial institution's asset size."
              },
              "financialInstitutionBranches": {
                "type": "array",
                "description": "Array of branches as related to a financial instituition.",
                "items": {
                  "type": "object",
                  "properties": {
                    "branchCode": {
                      "type": "string",
                      "description": "The code identifying the branch office."
                    },
                    "branchName": {
                      "type": "string",
                      "description": "The name of the branch office."
                    },
                    "address": {
                      "type": "object",
                      "description": "The address of the financial institution.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "description": "The 1st address line for the branch."
                        },
                        "address2": {
                          "type": "string",
                          "description": "The 2nd address line for the branch."
                        },
                        "address3": {
                          "type": "string",
                          "description": "The 3rd address line for the branch."
                        },
                        "city": {
                          "type": "string",
                          "description": "The city where the branch is located."
                        },
                        "county": {
                          "type": "string",
                          "description": "The county where the branch is located."
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "The postal (ZIP) code for the branch."
                        },
                        "postalCodeExtension": {
                          "type": "string",
                          "description": "The postal delivery point (+4)."
                        },
                        "stateCode": {
                          "type": "string",
                          "description": "The two character state code for the branch."
                        }
                      }
                    }
                  }
                }
              },
              "lastProcessingDate": {
                "type": "string",
                "format": "date",
                "description": "The date the institition's applications were last processed."
              },
              "nextProcessingDate": {
                "type": "string",
                "format": "date",
                "description": "The date the institition's applications will next be processed."
              },
              "productVersion": {
                "type": "string",
                "description": "The product version of the core banking system."
              }
            }
          },
          "statusCode": {
            "type": "number",
            "description": "Reference the `Codes` table."
          },
          "statusFlag": {
            "type": "boolean",
            "description": "Returns `true` if the post is successful. Returns `false` if any errors are encountered."
          },
          "statusMessage": {
            "type": "string",
            "description": "Details of the request `success` or `errors`."
          },
          "uuid": {
            "type": "string",
            "description": "Unique identifier for the request."
          }
        }
      },
      "ServiceDictionaryDataRq": {
        "type": "object",
        "properties": {
          "assetID": {
            "type": "string",
            "description": "A specific software-based key for identifying a client utilizing the Omni Platform. NXTsoft provides the unique value to the partner, vendor, or client."
          },
          "content": {
            "type": "object",
            "properties": {
              "serviceDictionaryName": {
                "type": "string",
                "description": "The name of the service from which to obtain data dictionary definitions."
              },
              "serviceDictionaryType": {
                "type": "string",
                "description": "The type of service dictionary operation type.",
                "enum": [
                  "Rq",
                  "Rs"
                ]
              },
              "includeExtendedElementsArray": {
                "type": "array",
                "description": "This is an array that lists elements by name, which are to be included in the response.",
                "items": {
                  "type": "object",
                  "properties": {
                    "includeExtendedElement": {
                      "type": "string",
                      "description": "Indicates that extended elements should be included for the field. The consumer would ask by name for x_ prefix elements to be included in the response."
                    }
                  }
                }
              },
              "serviceDictionaryFilter": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filterInformation": {
                      "type": "object",
                      "description": "Information on service dictionary filter.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Code indicating a field to use as a filter."
                        },
                        "value": {
                          "type": "string",
                          "description": "The field value to use as a filter."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "uuid": {
            "type": "string",
            "description": "Unique identifier for the request."
          }
        },
        "required": [
          "assetID"
        ]
      },
      "ServiceDictionaryDataRs": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "properties": {
              "serviceDictionaryName": {
                "type": "string",
                "description": "The name of the service from which to obtain data dictionary definitions."
              },
              "serviceDictionaryType": {
                "type": "string",
                "description": "The type of service dictionary operation type."
              },
              "serviceDictionaryFilter": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filterInformation": {
                      "type": "object",
                      "description": "Information on service dictionary filter.",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Code indicating a field to use as a filter."
                        },
                        "value": {
                          "type": "string",
                          "description": "The field value to use as a filter."
                        }
                      }
                    }
                  }
                }
              },
              "dictionaryElementInfo": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "CanonicalInfo": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The canonical value for the element."
                          },
                          "description": {
                            "type": "string",
                            "description": "The description for the canonical value."
                          }
                        }
                      }
                    },
                    "defaultValue": {
                      "type": "string",
                      "description": "The default value of the element if it is not provided."
                    },
                    "defaultDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The default date returned if it is not provided."
                    },
                    "helpInfo": {
                      "type": "string",
                      "description": "Help content specific to the element."
                    },
                    "highRangeValue": {
                      "type": "string",
                      "description": "The highest valid value for the element."
                    },
                    "lowRangeValue": {
                      "type": "string",
                      "description": "The lowest valid value for the element."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the element."
                    },
                    "path": {
                      "type": "string",
                      "description": "The path of the element."
                    },
                    "required": {
                      "type": "boolean",
                      "description": "True if the element is required."
                    },
                    "ServiceProviderFieldInfo": {
                      "type": "object",
                      "description": "Field information for a service provider.",
                      "properties": {
                        "dataType": {
                          "type": "string",
                          "description": "The data type for the field."
                        },
                        "decimalPosition": {
                          "type": "number",
                          "description": "The decimal position for a numeric field."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the field."
                        },
                        "length": {
                          "type": "number",
                          "description": "The length of the field."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name for the field."
                        },
                        "tableName": {
                          "type": "string",
                          "description": "The table name holding the element."
                        }
                      }
                    }
                  }
                }
              },
              "serviceProviderErrorInfo": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "category": {
                      "type": "string",
                      "description": "The Soap Header error category."
                    },
                    "code": {
                      "type": "string",
                      "description": "The Soap Header error code."
                    },
                    "description": {
                      "type": "string",
                      "description": "The Soap Header Fault error description."
                    },
                    "regEx": {
                      "type": "string",
                      "description": "The pattern that would generate the error code as expressed as a regular expression."
                    }
                  }
                }
              }
            }
          },
          "statusCode": {
            "type": "number",
            "description": "Reference the `Codes` table."
          },
          "statusFlag": {
            "type": "boolean",
            "description": "Returns `true` if the post is successful. Returns `false` if any errors are encountered."
          },
          "statusMessage": {
            "type": "string",
            "description": "Details of the request `success` or `errors`."
          },
          "uuid": {
            "type": "string",
            "description": "Unique identifier for the request."
          }
        }
      }
    }
  },
  "security": [
    {
      "oAuth2": []
    }
  ]
}